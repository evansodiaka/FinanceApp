@page "/earnings"
@using FinanceMentor1.Client.Components;
@inject HttpClient Http;
@using FinanceMentor1.Shared;
@using System.Globalization;
<div class="row">
    <div class ="col-lg-8">
        <div class="card-header">
            Earnings
        </div>
        <div class="card-body">
            <table class=" table table-striped">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Category</th>
                        <th>Subject</th>
                        <th>Amount</th>
                        <th>&nbsp;</th>
                    </tr>
                </thead>
                <tbody>
                    @if (earnings == null)
                    {
                        <tr><td><em>Loading...</em></td></tr>
                    }
                    else
                    {
                        @foreach (var earning in earnings)
                        {
                            <tr>
                                <td>@earning.Date.ToShortDateString()</td>
                                <td>@earning.Category</td>
                                <td>@earning.Subject</td>
                                <td>@earning.Amount.ToString("C2",CultureInfo.CreateSpecificCulture("en-US"))</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <div class="col-lg-4">
            <EarningForm OnSubmitCallback="@Refresh"> </EarningForm>
        </div>

    </div>

</div>
<div>&nbsp;</div>







@* <h3>Earnings</h3>

<EarningForm> </EarningForm> *@
@code {
    private Earning[] earnings;
    //private const string RequestUri = "api/Earnings";

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }
    private async Task LoadData()
    {
        earnings = await Http.GetFromJsonAsync<Earning[]>("Earnings");
        StateHasChanged();
    }
    public async void Refresh()
    {
        await LoadData();
    }
}